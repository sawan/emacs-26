;;; mistty-autoloads.el --- automatically extracted autoloads (do not edit)   -*- lexical-binding: t -*-
;; Generated by the `loaddefs-generate' function.

;; This file is part of GNU Emacs.

;;; Code:

(add-to-list 'load-path (or (and load-file-name (directory-file-name (file-name-directory load-file-name))) (car load-path)))



;;; Generated autoloads from mistty.el

(autoload 'mistty "mistty" "\
Go to the next MisTTY buffer, or create a new one.

The first time this command is called, it creates a new MisTTY
buffer. Afterwards, this command goes to a MisTTY buffer. If
already on a MisTTY buffer, go to the next one or create another
one.

To create a new buffer unconditionally, call `mistty-create'.

If OTHER-WINDOW is nil, execute the default action configured by
`display-comint-buffer-action'. If OTHER-WINDOW is a function, it
is passed to `pop-to-buffer` to be used as a `display-buffer'
action. Otherwise, display the buffer in another window.

ACCEPT-BUFFER, if specified, must be a function that takes in a
buffer and return non-nil if that buffer should be taken into
account by this command. This can be used to manage distinct
group of buffers, such as buffers belonging to different
projects.

(fn &optional OTHER-WINDOW ACCEPT-BUFFER)" t)
(autoload 'mistty-other-window "mistty" "\
Go to the next MisTTY buffer in another window.

See the documentation of the function `mistty' for details..

If OTHER-WINDOW is non-nil, put the buffer into another window." t)
(autoload 'mistty-create "mistty" "\
Create a new MisTTY buffer, running a shell.

The shell that is run can be configured by setting
`explicit-shell-file-name', `shell-file-name' or come implicitly
from the ESHELL or SHELL environment variables.

Set COMMAND to specify instead the command to run just for the
current call.

If OTHER-WINDOW is nil, execute the default action configured by
`display-comint-buffer-action'. If OTHER-WINDOW is a function, it
is passed to `pop-to-buffer` to be used as a `display-buffer'
action. Otherwise, display the buffer in another window.

Upon success, the function returns the newly-created buffer.

(fn &optional COMMAND OTHER-WINDOW)" t)
(autoload 'mistty-create-other-window "mistty" "\
Create a new MisTTY buffer, running a shell, in another window.

COMMAND, if specified, is the command to execute instead of the
shell.

See the documentation of `mistty-create' for details.

(fn &optional COMMAND)" t)
(register-definition-prefixes "mistty" '("mistty-"))


;;; Generated autoloads from mistty-changeset.el

(register-definition-prefixes "mistty-changeset" '("mistty--"))


;;; Generated autoloads from mistty-log.el

(register-definition-prefixes "mistty-log" '("mistty-"))


;;; Generated autoloads from mistty-osc7.el

(register-definition-prefixes "mistty-osc7" '("mistty-"))


;;; Generated autoloads from mistty-project.el

(autoload 'mistty-in-project "mistty-project" "\
Start or go to a MisTTY buffer in the project's root directory.

If a MisTTY buffer already exists for running a shell in the
project's root, switch to it. If we're already on that buffer,
create a new buffer in that project, like `mistty' does.

Otherwise, create a new MisTTY shell buffer. With
\\[universal-argument] prefix arg, create a new shell buffer even
if one already exists." t)
(register-definition-prefixes "mistty-project" '("mistty-project-init-kill-buffer"))


;;; Generated autoloads from mistty-queue.el

(register-definition-prefixes "mistty-queue" '("mistty-"))


;;; Generated autoloads from mistty-term.el

(register-definition-prefixes "mistty-term" '("mistty-"))


;;; Generated autoloads from mistty-undo.el

(register-definition-prefixes "mistty-undo" '("mistty--"))


;;; Generated autoloads from mistty-util.el

(register-definition-prefixes "mistty-util" '("mistty-"))

;;; End of scraped data

(provide 'mistty-autoloads)

;; Local Variables:
;; version-control: never
;; no-byte-compile: t
;; no-update-autoloads: t
;; no-native-compile: t
;; coding: utf-8-emacs-unix
;; End:

;;; mistty-autoloads.el ends here
